<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:util="http://www.springframework.org/schema/util"
       xsi:schemaLocation="
      http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
      http://www.springframework.org/schema/util
      http://www.springframework.org/schema/util/spring-util.xsd">

    <!--1.配置SecurityManager
           需要配置缓存管理和realm
    -->
    <bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
<!--        <property name="cacheManager" ref="cacheManager"/>-->
        <property name="realm" ref="myRealm"/>
    </bean>

    <!-- 相当于调用SecurityUtils.setSecurityManager(securityManager) -->
    <bean class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
        <property name="staticMethod" value="org.apache.shiro.SecurityUtils.setSecurityManager" />
        <property name="arguments" ref="securityManager" />
    </bean>

    <!--2.配置缓存-->
<!--    <bean id="cacheManager" class="org.apache.shiro.cache.ehcache.EhCacheManager">-->
<!--        &lt;!&ndash;&ndash;&gt;-->
<!--        <property name="cacheManagerConfigFile" value="classpath:META-INF/ehcache.xml"/>-->
<!--&lt;!&ndash;        <property name="cacheManager" ref=""/>&ndash;&gt;-->
<!--    </bean>-->

    <!--3.配置realm-->
    <bean id="myRealm" class="com.wxss.shiro.DataBaseRealm">
        <!--配置凭证匹配器-->
        <property name="credentialsMatcher">
            <bean class="org.apache.shiro.authc.credential.HashedCredentialsMatcher">
                <!--使用MD5加密-->
                <property name="hashAlgorithmName" value="MD5"/>
                <!--加密次数-->
                <property name="hashIterations" value="5"/>
            </bean>
        </property>
    </bean>

    <!--4.自定调用配置在IOC容器中shiro bean的生命周期方法
        保证实现了Shiro内部lifecycle函数的bean执行
    -->
    <bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor"/>

<!--    必须和web.xml中配置的filter名称一致-->
    <bean id="shiroFilter"  class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
        <!--配置安全管理器-->
        <property name="securityManager" ref="securityManager"/>
        <!--配置登录url-->
        <property name="loginUrl" value="/login"/>
        <property name="successUrl" value="/index"/>
        <!--请求资源未授权时，跳转地址-->
        <property name="unauthorizedUrl" value="/unauthorized"/>
        <!-- 退出 -->
        <property name="filters">
            <util:map>
                <entry key="logout" value-ref="logoutFilter" />
            </util:map>
        </property>
        <!--权限配置-->
<!--        <property name="filterChainDefinitionMap" ref=""-->
        <property name="filterChainDefinitions">
            <!--
                authc:需要认证
                anon:匿名访问
                logout:退出
                /** 所有的请求(除去配置的静态资源请求或请求地址为anon的请求)都要通过登录验证,如果未登录则跳到/login
            -->
            <value>
                <!-- anon表示此地址不需要任何权限即可访问 -->
                /login=anon
                /index=anon
                /static/**=anon
                /doLogout=logout
                <!--所有的请求(除去配置的静态资源请求或请求地址为anon的请求)都要通过登录验证,如果未登录则跳到/login -->
                /** = authc
            </value>
        </property>
    </bean>

    <!-- 退出过滤器 -->
    <bean id="logoutFilter" class="org.apache.shiro.web.filter.authc.LogoutFilter">
        <property name="redirectUrl" value="/index" />
    </bean>


</beans>